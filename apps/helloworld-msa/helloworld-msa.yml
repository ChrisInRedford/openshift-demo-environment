---
apiVersion: "v1"
kind: "Template"
metadata:
  name: "helloworld-msa"
  annotations:
    description: "The Red Hat HelloWorld MSA (Microservice Architecture)."
objects:
- apiVersion: "v1"
  kind: "ServiceAccount"
  metadata:
    name: "turbine"
- apiVersion: "v1"
  kind: "DeploymentConfig"
  metadata:
    labels:
      app: "turbine-server"
    name: "turbine-server"
  spec:
    replicas: "1"
    selector:
      app: "turbine-server"
      deploymentconfig: "turbine-server"
    strategy:
      resources: {}
    template:
      metadata:
        labels:
          app: "turbine-server"
          deploymentconfig: "turbine-server"
      spec:
        containers:
        - name: "turbine-server"
          image: "docker.io/metmajer/turbine-server:1.0.26.1"
          env:
          - name: "KUBERNETES_MASTER"
            value: "https://${OS_PUBLIC_HOSTNAME}:8443"
          - name: "KUBERNETES_NAMESPACE"
            value: "${OS_PROJECT}"
          ports:
          - containerPort: 9779
            protocol: "TCP"
          - containerPort: 8080
            protocol: "TCP"
          - containerPort: 8778
            protocol: "TCP"
          resources: {}
        serviceAccountName: "turbine"
  status: {}
- apiVersion: "v1"
  kind: "Service"
  metadata:
    labels:
      app: "turbine-server"
    name: "turbine-server"
  spec:
    ports:
    - name: "8080-tcp"
      port: 8080
      protocol: "TCP"
      targetPort: 8080
    - name: "8778-tcp"
      port: 8778
      protocol: "TCP"
      targetPort: 8778
    - name: "9779-tcp"
      port: 9779
      protocol: "TCP"
      targetPort: 9779
    selector:
      app: "turbine-server"
      deploymentconfig: "turbine-server"
  status:
    loadBalancer: {}
- apiVersion: "v1"
  kind: "Route"
  metadata:
    name: "turbine-server"
  spec:
    port:
      targetPort: 8080
    to:
      kind: "Service"
      name: "turbine-server"
- apiVersion: "v1"
  kind: "DeploymentConfig"
  metadata:
    labels:
      app: "hystrix-dashboard"
    name: "hystrix-dashboard"
  spec:
    replicas: "1"
    selector:
      app: "hystrix-dashboard"
      deploymentconfig: "hystrix-dashboard"
    strategy:
      resources: {}
    template:
      metadata:
        labels:
          app: "hystrix-dashboard"
          deploymentconfig: "hystrix-dashboard"
      spec:
        containers:
        - name: "hystrix-dashboard"
          image: "docker.io/metmajer/hystrix-dashboard:1.0.26.1"
          ports:
          - containerPort: 8080
            protocol: "TCP"
          - containerPort: 8778
            protocol: "TCP"
          - containerPort: 9779
            protocol: "TCP"
          resources: {}
  status: {}
- apiVersion: "v1"
  kind: "Service"
  metadata:
    labels:
      app: "hystrix-dashboard"
    name: "hystrix-dashboard"
  spec:
    ports:
    - name: "8080-tcp"
      port: 8080
      protocol: "TCP"
      targetPort: 8080
    - name: "8778-tcp"
      port: 8778
      protocol: "TCP"
      targetPort: 8778
    - name: "9779-tcp"
      port: 9779
      protocol: "TCP"
      targetPort: 9779
    selector:
      app: "hystrix-dashboard"
      deploymentconfig: "hystrix-dashboard"
  status:
    loadBalancer: {}
- apiVersion: "v1"
  kind: "Route"
  metadata:
    name: "hystrix-dashboard"
  spec:
    port:
      targetPort: 8080
    to:
      kind: "Service"
      name: "hystrix-dashboard"
- apiVersion: "v1"
  kind: "DeploymentConfig"
  metadata:
    labels:
      app: "frontend"
      hystrix.enabled: "true"
    name: "frontend"
  spec:
    replicas: "1"
    selector:
      app: "frontend"
      deploymentconfig: "frontend"
    strategy:
      resources: {}
    template:
      metadata:
        labels:
          app: "frontend"
          hystrix.enabled: "true"
          deploymentconfig: "frontend"
      spec:
        containers:
        - name: "frontend"
          image: "docker.io/metmajer/msa-frontend"
          env:
          - name: "APIGATEWAYURL"
            value: "http://api-gateway-${OS_PROJECT}.${OS_MASTER_IP}.xip.io/api"
          - name: "ALOHAURL"
            value: "http://aloha-${OS_PROJECT}.${OS_MASTER_IP}.xip.io/api/aloha"
          - name: "ALOHCHAINAURL"
            value: "http://aloha-${OS_PROJECT}.${OS_MASTER_IP}.xip.io/api/aloha-chaining"
          - name: "BONJOURCHAINURL"
            value: "http://bonjour-${OS_PROJECT}.${OS_MASTER_IP}.xip.io/api/bonjour-chaining"
          - name: "BONJOURURL"
            value: "http://bonjour-${OS_PROJECT}.${OS_MASTER_IP}.xip.io/api/bonjour"
          - name: "HOLAURL"
            value: "http://hola-${OS_PROJECT}.${OS_MASTER_IP}.xip.io/api/hola"
          - name: "HOLACHAINURL"
            value: "http://hola-${OS_PROJECT}.${OS_MASTER_IP}.xip.io/api/hola-chaining"
          - name: "OLAURL"
            value: "http://ola-${OS_PROJECT}.${OS_MASTER_IP}.xip.io/api/ola"
          - name: "OLACHAINURL"
            value: "http://ola-${OS_PROJECT}.${OS_MASTER_IP}.xip.io/api/ola-chaining"
          - name: "ENABLE_HYSTRIX"
            value: "true"
          - name: "HYSTRIXDASHBOARDURL"
            value: "http://hystrix-dashboard-${OS_PROJECT}.${OS_MASTER_IP}.xip.io"
          - name: "TURBINESERVERURL"
            value: "http://turbine-server-${OS_PROJECT}.${OS_MASTER_IP}.xip.io"
          ports:
          - containerPort: 8080
            protocol: "TCP"
          resources: {}
  status: {}
- apiVersion: "v1"
  kind: "Service"
  metadata:
    labels:
      app: "frontend"
      hystrix.enabled: "true"
    name: "frontend"
  spec:
    ports:
    - name: "8080-tcp"
      port: 8080
      protocol: "TCP"
      targetPort: 8080
    selector:
      app: "frontend"
      deploymentconfig: "frontend"
  status:
    loadBalancer: {}
- apiVersion: "v1"
  kind: "Route"
  metadata:
    name: "frontend"
  spec:
    to:
      kind: "Service"
      name: "frontend"
- apiVersion: "v1"
  kind: "DeploymentConfig"
  metadata:
    labels:
      app: "api-gateway"
      hystrix.enabled: "true"
    name: "api-gateway"
  spec:
    replicas: "1"
    selector:
      app: "api-gateway"
      deploymentconfig: "api-gateway"
    strategy:
      resources: {}
    template:
      metadata:
        labels:
          app: "api-gateway"
          deploymentconfig: "api-gateway"
          hystrix.enabled: "true"
      spec:
        containers:
        - name: "api-gateway"
          image: "docker.io/metmajer/msa-api-gateway"
          env:
          - name: "AB_ENABLED"
            value: "jolokia"
          ports:
          - containerPort: 9779
            protocol: "TCP"
          - containerPort: 8080
            protocol: "TCP"
          - containerPort: 8778
            protocol: "TCP"
          resources: {}
  status: {}
- apiVersion: "v1"
  kind: "Service"
  metadata:
    labels:
      app: "api-gateway"
      hystrix.enabled: "true"
    name: "api-gateway"
  spec:
    ports:
    - name: "8080-tcp"
      port: 8080
      protocol: "TCP"
      targetPort: 8080
    - name: "8778-tcp"
      port: 8778
      protocol: "TCP"
      targetPort: 8778
    - name: "9779-tcp"
      port: 9779
      protocol: "TCP"
      targetPort: 9779
    selector:
      app: "api-gateway"
      deploymentconfig: "api-gateway"
  status:
    loadBalancer: {}
- apiVersion: "v1"
  kind: "Route"
  metadata:
    name: "api-gateway"
  spec:
    port:
      targetPort: 8080
    to:
      kind: "Service"
      name: "api-gateway"
- apiVersion: "v1"
  kind: "DeploymentConfig"
  metadata:
    labels:
      app: "aloha"
      hystrix.enabled: "true"
    name: "aloha"
  spec:
    replicas: "1"
    selector:
      app: "aloha"
      deploymentconfig: "aloha"
    strategy:
      resources: {}
    template:
      metadata:
        labels:
          app: "aloha"
          deploymentconfig: "aloha"
          hystrix.enabled: "true"
      spec:
        containers:
        - name: "aloha"
          image: "docker.io/metmajer/msa-aloha"
          env:
          - name: "AB_ENABLED"
            value: "jolokia"
          ports:
          - containerPort: 8080
            protocol: "TCP"
          - containerPort: 8778
            protocol: "TCP"
          - containerPort: 9779
            protocol: "TCP"
          resources: {}
  status: {}
- apiVersion: "v1"
  kind: "Service"
  metadata:
    labels:
      app: "aloha"
      hystrix.enabled: "true"
    name: "aloha"
  spec:
    ports:
    - name: "8080-tcp"
      port: 8080
      protocol: "TCP"
      targetPort: 8080
    - name: "8778-tcp"
      port: 8778
      protocol: "TCP"
      targetPort: 8778
    - name: "9779-tcp"
      port: 9779
      protocol: "TCP"
      targetPort: 9779
    selector:
      app: "aloha"
      deploymentconfig: "aloha"
  status:
    loadBalancer: {}
- apiVersion: "v1"
  kind: "Route"
  metadata:
    name: "aloha"
  spec:
    port:
      targetPort: 8080
    to:
      kind: "Service"
      name: "aloha"
- apiVersion: "v1"
  kind: "DeploymentConfig"
  metadata:
    labels:
      app: "bonjour"
      hystrix.enabled: "true"
    name: "bonjour"
  spec:
    replicas: "1"
    selector:
      app: "bonjour"
      deploymentconfig: "bonjour"
    strategy:
      resources: {}
    template:
      metadata:
        labels:
          app: "bonjour"
          deploymentconfig: "bonjour"
          hystrix.enabled: "true"
      spec:
        containers:
        - name: "bonjour"
          image: "docker.io/metmajer/msa-bonjour"
          ports:
          - containerPort: 8080
            protocol: "TCP"
          resources: {}
  status: {}
- apiVersion: "v1"
  kind: "Service"
  metadata:
    labels:
      app: "bonjour"
      hystrix.enabled: "true"
    name: "bonjour"
  spec:
    ports:
    - name: "8080-tcp"
      port: 8080
      protocol: "TCP"
      targetPort: 8080
    selector:
      app: "bonjour"
      deploymentconfig: "bonjour"
  status:
    loadBalancer: {}
- apiVersion: "v1"
  kind: "Route"
  metadata:
    name: "bonjour"
  spec:
    to:
      kind: "Service"
      name: "bonjour"
- apiVersion: v1
  kind: "DeploymentConfig"
  metadata:
    labels:
      app: "hola"
      hystrix.enabled: "true"
    name: "hola"
  spec:
    replicas: "1"
    selector:
      app: "hola"
      deploymentconfig: "hola"
    strategy:
      resources: {}
    template:
      metadata:
        labels:
          app: "hola"
          deploymentconfig: "hola"
          hystrix.enabled: "true"
      spec:
        containers:
        - name: "hola"
          image: "docker.io/metmajer/msa-hola"
          ports:
          - containerPort: 9779
            protocol: "TCP"
          - containerPort: 8080
            protocol: "TCP"
          - containerPort: 8778
            protocol: "TCP"
          resources: {}
  status: {}
- apiVersion: "v1"
  kind: "Service"
  metadata:
    labels:
      app: "hola"
      hystrix.enabled: "true"
    name: "hola"
  spec:
    ports:
    - name: "8080-tcp"
      port: 8080
      protocol: "TCP"
      targetPort: 8080
    - name: "8778-tcp"
      port: 8778
      protocol: "TCP"
      targetPort: 8778
    - name: "9779-tcp"
      port: 9779
      protocol: "TCP"
      targetPort: 9779
    selector:
      app: "hola"
      deploymentconfig: "hola"
  status:
    loadBalancer: {}
- apiVersion: "v1"
  kind: "Route"
  metadata:
    name: "hola"
  spec:
    port:
      targetPort: 8080
    to:
      kind: "Service"
      name: "hola"
- apiVersion: "v1"
  kind: "DeploymentConfig"
  metadata:
    labels:
      app: "ola"
      hystrix.enabled: "true"
    name: "ola"
  spec:
    replicas: "1"
    selector:
      app: "ola"
      deploymentconfig: "ola"
    strategy:
      resources: {}
    template:
      metadata:
        labels:
          app: "ola"
          deploymentconfig: "ola"
          hystrix.enabled: "true"
      spec:
        containers:
        - name: "ola"
          image: "docker.io/metmajer/msa-ola"
          env:
          - name: "AB_ENABLED"
            value: "jolokia"
          ports:
          - containerPort: 8778
            protocol: "TCP"
          - containerPort: 9779
            protocol: "TCP"
          - containerPort: 8080
            protocol: "TCP"
          resources: {}
  status: {}
- apiVersion: "v1"
  kind: "Service"
  metadata:
    labels:
      app: "ola"
      hystrix.enabled: "true"
    name: "ola"
  spec:
    ports:
    - name: "8080-tcp"
      port: 8080
      protocol: "TCP"
      targetPort: 8080
    - name: "8778-tcp"
      port: 8778
      protocol: "TCP"
      targetPort: 8778
    - name: "9779-tcp"
      port: 9779
      protocol: "TCP"
      targetPort: 9779
    selector:
      app: "ola"
      deploymentconfig: "ola"
  status:
    loadBalancer: {}
- apiVersion: "v1"
  kind: "Route"
  metadata:
    name: "ola"
  spec:
    port:
      targetPort: 8080
    to:
      kind: "Service"
      name: "ola"
parameters:
- name: "OS_PROJECT"
  description: "The name of the project"
  value: "OS_PROJECT"
  required: true
- name: "OS_MASTER_IP"
  description: "The IP address of your OpenShift cluster's master"
  value: "OS_MASTER_IP"
  required: true
- name: "OS_PUBLIC_HOSTNAME"
  description: "The public hostname of your OpenShift cluster's master"
  value: "OS_PUBLIC_HOSTNAME"
  required: true
